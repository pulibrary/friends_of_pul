{"version":3,"sources":["modernizr.js","pul-base.behaviors.js"],"names":["window","document","undefined","is","obj","type","testRunner","featureNames","feature","aliasIdx","result","nameIdx","featureName","featureNameSplit","featureIdx","tests","hasOwnProperty","name","push","toLowerCase","options","aliases","length","fn","split","Modernizr","Boolean","classes","join","setClasses","className","docElement","classPrefix","_config","isSVG","baseVal","enableJSClass","reJS","RegExp","replace","enableClasses","addTest","test","key","hasOwnProp","last","_trigger","contains","str","substr","indexOf","createElement","arguments","createElementNS","call","apply","getBody","body","fake","injectElementWithStyles","rule","callback","nodes","testnames","style","ret","node","docOverflow","mod","div","parseInt","id","appendChild","styleSheet","cssText","createTextNode","background","overflow","parentNode","removeChild","offsetHeight","domToCSS","m1","nativeTestProps","props","value","i","CSS","supports","conditionText","getComputedStyle","position","cssToDOM","m2","toUpperCase","testProps","prefixed","skipValueTest","cleanElems","afterInit","mStyle","modElem","propsLength","prop","before","elems","shift","e","ModernizrProto","_version","usePrefixes","_q","on","cb","self","this","setTimeout","addAsyncTest","prototype","documentElement","nodeName","_hasOwnProperty","object","property","constructor","_l","res","cbs","addStyleSheet","ownerDocument","p","parent","getElementsByTagName","innerHTML","insertBefore","lastChild","firstChild","getElements","elements","html5","addElements","newElements","shivDocument","getExpandoData","data","expandoData","expando","expanID","supportsUnknownElements","cache","cloneNode","saveClones","createElem","canHaveChildren","reSkip","tagUrn","frag","createDocumentFragment","clone","l","shivMethods","createFrag","Function","shivCSS","supportsHtml5Styles","hasCSS","addWrappers","index","reElements","applyElement","createWrapper","element","attributes","wrapper","shivNamespace","specified","setAttribute","nodeValue","shivCssText","pair","parts","replacement","removeWrappers","wrappers","removeNode","shivPrint","removeSheet","clearTimeout","_removeSheetTimer","shivedSheet","namespaces","ownerWindow","parentWindow","supportsShivableSheets","printShived","add","attachEvent","imports","sheet","collection","styleSheets","sheets","Array","pop","disabled","reMedia","media","er","reverse","version","a","childNodes","docEl","module","exports","elem","unshift","testProp","useValue","createSVGRect","$","Drupal","theme","pulBaseExampleButton","path","title","pulChatStatusBlock","chat_js_warning","chat_online","chat_offline","behaviors","pulSmoothScroll","attach","context","offset","offset_opacity","$back_to_top","scroll","scrollTop","addClass","removeClass","click","location","pathname","hostname","target","hash","slice","animate","top","pulSearchHeadersLinkBehavior","href_staff","attr","href_website","href_databases","l_staff","replaceWith","l_site","l_db","pulMainMenuBehavior","once","menu","menuToggle","preventDefault","slideToggle","removeAttr","each","ga","text","page","pulResourceButtonBehavior","settings","viewOnlineLink","undecodeViewOnline","resolvePrefix","pul_base_theme","pulChatWidgetBehavior","chat_text_block","append","pulTrackFooterMenuUsage","pulTrackGetHelpMenuUsage","pulTrackNewsUsage","result_position","pulRewriteTempStaff","link","update","email","pulTrackHoursUsage","pulTrackTabLinkUsage","pulTrackAllSearchUsage","pulTrackBranchUsage","jQuery"],"mappings":"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","file":"pul-base.scripts.min.js","sourcesContent":["/*!\n * modernizr v3.3.1\n * Build http://modernizr.com/download?-svg-addtest-fnbind-printshiv-setclasses-testprop-dontmin\n *\n * Copyright (c)\n *  Faruk Ates\n *  Paul Irish\n *  Alex Sexton\n *  Ryan Seddon\n *  Patrick Kettner\n *  Stu Cox\n *  Richard Herrera\n\n * MIT License\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in the\n * current UA and makes the results available to you in two ways: as properties on\n * a global `Modernizr` object, and as classes on the `<html>` element. This\n * information allows you to progressively enhance your pages with a granular level\n * of control over the experience.\n*/\n\n;(function(window, document, undefined){\n  var tests = [];\n  \n\n  /**\n   *\n   * ModernizrProto is the constructor for Modernizr\n   *\n   * @class\n   * @access public\n   */\n\n  var ModernizrProto = {\n    // The current version, dummy\n    _version: '3.3.1',\n\n    // Any settings that don't work as separate modules\n    // can go in here as configuration.\n    _config: {\n      'classPrefix': '',\n      'enableClasses': true,\n      'enableJSClass': true,\n      'usePrefixes': true\n    },\n\n    // Queue of tests\n    _q: [],\n\n    // Stub these for people who are listening\n    on: function(test, cb) {\n      // I don't really think people should do this, but we can\n      // safe guard it a bit.\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\n      // This is in case people listen to synchronous tests. I would leave it out,\n      // but the code to *disallow* sync tests in the real version of this\n      // function is actually larger than this.\n      var self = this;\n      setTimeout(function() {\n        cb(self[test]);\n      }, 0);\n    },\n\n    addTest: function(name, fn, options) {\n      tests.push({name: name, fn: fn, options: options});\n    },\n\n    addAsyncTest: function(fn) {\n      tests.push({name: null, fn: fn});\n    }\n  };\n\n  \n\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\n  var Modernizr = function() {};\n  Modernizr.prototype = ModernizrProto;\n\n  // Leak modernizr globally when you `require` it rather than force it here.\n  // Overwrite name so constructor name is nicer :D\n  Modernizr = new Modernizr();\n\n  \n\n  var classes = [];\n  \n\n  /**\n   * is returns a boolean if the typeof an obj is exactly type.\n   *\n   * @access private\n   * @function is\n   * @param {*} obj - A thing we want to check the type of\n   * @param {string} type - A string to compare the typeof against\n   * @returns {boolean}\n   */\n\n  function is(obj, type) {\n    return typeof obj === type;\n  }\n  ;\n\n  /**\n   * Run through all tests and detect their support in the current UA.\n   *\n   * @access private\n   */\n\n  function testRunner() {\n    var featureNames;\n    var feature;\n    var aliasIdx;\n    var result;\n    var nameIdx;\n    var featureName;\n    var featureNameSplit;\n\n    for (var featureIdx in tests) {\n      if (tests.hasOwnProperty(featureIdx)) {\n        featureNames = [];\n        feature = tests[featureIdx];\n        // run the test, throw the return value into the Modernizr,\n        // then based on that boolean, define an appropriate className\n        // and push it into an array of classes we'll join later.\n        //\n        // If there is no name, it's an 'async' test that is run,\n        // but not directly added to the object. That should\n        // be done with a post-run addTest call.\n        if (feature.name) {\n          featureNames.push(feature.name.toLowerCase());\n\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n            // Add all the aliases into the names list\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n            }\n          }\n        }\n\n        // Run the test, or use the raw value if it's not a function\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n\n        // Set each of the names on the Modernizr object\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n          featureName = featureNames[nameIdx];\n          // Support dot properties as sub tests. We don't do checking to make sure\n          // that the implied parent tests have been added. You must call them in\n          // order (either in the test, or make the parent test a dependency).\n          //\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n          // hashtag famous last words\n          featureNameSplit = featureName.split('.');\n\n          if (featureNameSplit.length === 1) {\n            Modernizr[featureNameSplit[0]] = result;\n          } else {\n            // cast to a Boolean, if not one already\n            /* jshint -W053 */\n            if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n            }\n\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n          }\n\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n        }\n      }\n    }\n  }\n  ;\n\n  /**\n   * docElement is a convenience wrapper to grab the root element of the document\n   *\n   * @access private\n   * @returns {HTMLElement|SVGElement} The root element of the document\n   */\n\n  var docElement = document.documentElement;\n  \n\n  /**\n   * A convenience helper to check if the document we are running in is an SVG document\n   *\n   * @access private\n   * @returns {boolean}\n   */\n\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\n  \n\n  /**\n   * setClasses takes an array of class names and adds them to the root element\n   *\n   * @access private\n   * @function setClasses\n   * @param {string[]} classes - Array of class names\n   */\n\n  // Pass in an and array of class names, e.g.:\n  //  ['no-webp', 'borderradius', ...]\n  function setClasses(classes) {\n    var className = docElement.className;\n    var classPrefix = Modernizr._config.classPrefix || '';\n\n    if (isSVG) {\n      className = className.baseVal;\n    }\n\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\n    // Handle classPrefix on this too\n    if (Modernizr._config.enableJSClass) {\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\n    }\n\n    if (Modernizr._config.enableClasses) {\n      // Add the new classes\n      className += ' ' + classPrefix + classes.join(' ' + classPrefix);\n      isSVG ? docElement.className.baseVal = className : docElement.className = className;\n    }\n\n  }\n\n  ;\n\n  /**\n   * hasOwnProp is a shim for hasOwnProperty that is needed for Safari 2.0 support\n   *\n   * @author kangax\n   * @access private\n   * @function hasOwnProp\n   * @param {object} object - The object to check for a property\n   * @param {string} property - The property to check for\n   * @returns {boolean}\n   */\n\n  // hasOwnProperty shim by kangax needed for Safari 2.0 support\n  var hasOwnProp;\n\n  (function() {\n    var _hasOwnProperty = ({}).hasOwnProperty;\n    /* istanbul ignore else */\n    /* we have no way of testing IE 5.5 or safari 2,\n     * so just assume the else gets hit */\n    if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\n      hasOwnProp = function(object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function(object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n  })();\n\n  \n\n\n   // _l tracks listeners for async tests, as well as tests that execute after the initial run\n  ModernizrProto._l = {};\n\n  /**\n   * Modernizr.on is a way to listen for the completion of async tests. Being\n   * asynchronous, they may not finish before your scripts run. As a result you\n   * will get a possibly false negative `undefined` value.\n   *\n   * @memberof Modernizr\n   * @name Modernizr.on\n   * @access public\n   * @function on\n   * @param {string} feature - String name of the feature detect\n   * @param {function} cb - Callback function returning a Boolean - true if feature is supported, false if not\n   * @example\n   *\n   * ```js\n   * Modernizr.on('flash', function( result ) {\n   *   if (result) {\n   *    // the browser has flash\n   *   } else {\n   *     // the browser does not have flash\n   *   }\n   * });\n   * ```\n   */\n\n  ModernizrProto.on = function(feature, cb) {\n    // Create the list of listeners if it doesn't exist\n    if (!this._l[feature]) {\n      this._l[feature] = [];\n    }\n\n    // Push this test on to the listener list\n    this._l[feature].push(cb);\n\n    // If it's already been resolved, trigger it on next tick\n    if (Modernizr.hasOwnProperty(feature)) {\n      // Next Tick\n      setTimeout(function() {\n        Modernizr._trigger(feature, Modernizr[feature]);\n      }, 0);\n    }\n  };\n\n  /**\n   * _trigger is the private function used to signal test completion and run any\n   * callbacks registered through [Modernizr.on](#modernizr-on)\n   *\n   * @memberof Modernizr\n   * @name Modernizr._trigger\n   * @access private\n   * @function _trigger\n   * @param {string} feature - string name of the feature detect\n   * @param {function|boolean} [res] - A feature detection function, or the boolean =\n   * result of a feature detection function\n   */\n\n  ModernizrProto._trigger = function(feature, res) {\n    if (!this._l[feature]) {\n      return;\n    }\n\n    var cbs = this._l[feature];\n\n    // Force async\n    setTimeout(function() {\n      var i, cb;\n      for (i = 0; i < cbs.length; i++) {\n        cb = cbs[i];\n        cb(res);\n      }\n    }, 0);\n\n    // Don't trigger these again\n    delete this._l[feature];\n  };\n\n  /**\n   * addTest allows you to define your own feature detects that are not currently\n   * included in Modernizr (under the covers it's the exact same code Modernizr\n   * uses for its own [feature detections](https://github.com/Modernizr/Modernizr/tree/master/feature-detects)). Just like the offical detects, the result\n   * will be added onto the Modernizr object, as well as an appropriate className set on\n   * the html element when configured to do so\n   *\n   * @memberof Modernizr\n   * @name Modernizr.addTest\n   * @optionName Modernizr.addTest()\n   * @optionProp addTest\n   * @access public\n   * @function addTest\n   * @param {string|object} feature - The string name of the feature detect, or an\n   * object of feature detect names and test\n   * @param {function|boolean} test - Function returning true if feature is supported,\n   * false if not. Otherwise a boolean representing the results of a feature detection\n   * @example\n   *\n   * The most common way of creating your own feature detects is by calling\n   * `Modernizr.addTest` with a string (preferably just lowercase, without any\n   * punctuation), and a function you want executed that will return a boolean result\n   *\n   * ```js\n   * Modernizr.addTest('itsTuesday', function() {\n   *  var d = new Date();\n   *  return d.getDay() === 2;\n   * });\n   * ```\n   *\n   * When the above is run, it will set Modernizr.itstuesday to `true` when it is tuesday,\n   * and to `false` every other day of the week. One thing to notice is that the names of\n   * feature detect functions are always lowercased when added to the Modernizr object. That\n   * means that `Modernizr.itsTuesday` will not exist, but `Modernizr.itstuesday` will.\n   *\n   *\n   *  Since we only look at the returned value from any feature detection function,\n   *  you do not need to actually use a function. For simple detections, just passing\n   *  in a statement that will return a boolean value works just fine.\n   *\n   * ```js\n   * Modernizr.addTest('hasJquery', 'jQuery' in window);\n   * ```\n   *\n   * Just like before, when the above runs `Modernizr.hasjquery` will be true if\n   * jQuery has been included on the page. Not using a function saves a small amount\n   * of overhead for the browser, as well as making your code much more readable.\n   *\n   * Finally, you also have the ability to pass in an object of feature names and\n   * their tests. This is handy if you want to add multiple detections in one go.\n   * The keys should always be a string, and the value can be either a boolean or\n   * function that returns a boolean.\n   *\n   * ```js\n   * var detects = {\n   *  'hasjquery': 'jQuery' in window,\n   *  'itstuesday': function() {\n   *    var d = new Date();\n   *    return d.getDay() === 2;\n   *  }\n   * }\n   *\n   * Modernizr.addTest(detects);\n   * ```\n   *\n   * There is really no difference between the first methods and this one, it is\n   * just a convenience to let you write more readable code.\n   */\n\n  function addTest(feature, test) {\n\n    if (typeof feature == 'object') {\n      for (var key in feature) {\n        if (hasOwnProp(feature, key)) {\n          addTest(key, feature[ key ]);\n        }\n      }\n    } else {\n\n      feature = feature.toLowerCase();\n      var featureNameSplit = feature.split('.');\n      var last = Modernizr[featureNameSplit[0]];\n\n      // Again, we don't check for parent test existence. Get that right, though.\n      if (featureNameSplit.length == 2) {\n        last = last[featureNameSplit[1]];\n      }\n\n      if (typeof last != 'undefined') {\n        // we're going to quit if you're trying to overwrite an existing test\n        // if we were to allow it, we'd do this:\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n        //   docElement.className = docElement.className.replace( re, '' );\n        // but, no rly, stuff 'em.\n        return Modernizr;\n      }\n\n      test = typeof test == 'function' ? test() : test;\n\n      // Set the value (this is the magic, right here).\n      if (featureNameSplit.length == 1) {\n        Modernizr[featureNameSplit[0]] = test;\n      } else {\n        // cast to a Boolean, if not one already\n        /* jshint -W053 */\n        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n          Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n        }\n\n        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = test;\n      }\n\n      // Set a single class (either `feature` or `no-feature`)\n      /* jshint -W041 */\n      setClasses([(!!test && test != false ? '' : 'no-') + featureNameSplit.join('-')]);\n      /* jshint +W041 */\n\n      // Trigger the event\n      Modernizr._trigger(feature, test);\n    }\n\n    return Modernizr; // allow chaining.\n  }\n\n  // After all the tests are run, add self to the Modernizr prototype\n  Modernizr._q.push(function() {\n    ModernizrProto.addTest = addTest;\n  });\n\n  \n\n\n/**\n  * @optionName html5printshiv\n  * @optionProp html5printshiv\n  */\n\n  // Take the html5 variable out of the html5shiv scope so we can return it.\n  var html5;\n  if (!isSVG) {\n\n    /**\n     * @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n      /*jshint evil:true */\n      /** version */\n      var version = '3.7.3';\n\n      /** Preset options */\n      var options = window.html5 || {};\n\n      /** Used to skip problem elements */\n      var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n      /** Not all elements can be cloned in IE **/\n      var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n      /** Detect whether the browser supports default html5 styles */\n      var supportsHtml5Styles;\n\n      /** Name of the expando, to work with multiple documents or to re-shiv one document */\n      var expando = '_html5shiv';\n\n      /** The id for the the documents expando */\n      var expanID = 0;\n\n      /** Cached data for each document */\n      var expandoData = {};\n\n      /** Detect whether the browser supports unknown elements */\n      var supportsUnknownElements;\n\n      (function() {\n        try {\n          var a = document.createElement('a');\n          a.innerHTML = '<xyz></xyz>';\n          //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n          supportsHtml5Styles = ('hidden' in a);\n\n          supportsUnknownElements = a.childNodes.length == 1 || (function() {\n            // assign a false positive if unable to shiv\n            (document.createElement)('a');\n            var frag = document.createDocumentFragment();\n            return (\n              typeof frag.cloneNode == 'undefined' ||\n                typeof frag.createDocumentFragment == 'undefined' ||\n                typeof frag.createElement == 'undefined'\n            );\n          }());\n        } catch(e) {\n          // assign a false positive if detection fails => unable to shiv\n          supportsHtml5Styles = true;\n          supportsUnknownElements = true;\n        }\n\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Creates a style sheet with the given CSS text and adds it to the document.\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @param {String} cssText The CSS text.\n       * @returns {StyleSheet} The style element.\n       */\n      function addStyleSheet(ownerDocument, cssText) {\n        var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n        p.innerHTML = 'x<style>' + cssText + '</style>';\n        return parent.insertBefore(p.lastChild, parent.firstChild);\n      }\n\n      /**\n       * Returns the value of `html5.elements` as an array.\n       * @private\n       * @returns {Array} An array of shived element node names.\n       */\n      function getElements() {\n        var elements = html5.elements;\n        return typeof elements == 'string' ? elements.split(' ') : elements;\n      }\n\n      /**\n       * Extends the built-in list of html5 elements\n       * @memberOf html5\n       * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n       * @param {Document} ownerDocument The context document.\n       */\n      function addElements(newElements, ownerDocument) {\n        var elements = html5.elements;\n        if(typeof elements != 'string'){\n          elements = elements.join(' ');\n        }\n        if(typeof newElements != 'string'){\n          newElements = newElements.join(' ');\n        }\n        html5.elements = elements +' '+ newElements;\n        shivDocument(ownerDocument);\n      }\n\n      /**\n       * Returns the data associated to the given document\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Object} An object of data.\n       */\n      function getExpandoData(ownerDocument) {\n        var data = expandoData[ownerDocument[expando]];\n        if (!data) {\n          data = {};\n          expanID++;\n          ownerDocument[expando] = expanID;\n          expandoData[expanID] = data;\n        }\n        return data;\n      }\n\n      /**\n       * returns a shived element for the given nodeName and document\n       * @memberOf html5\n       * @param {String} nodeName name of the element\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived element.\n       */\n      function createElement(nodeName, ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createElement(nodeName);\n        }\n        if (!data) {\n          data = getExpandoData(ownerDocument);\n        }\n        var node;\n\n        if (data.cache[nodeName]) {\n          node = data.cache[nodeName].cloneNode();\n        } else if (saveClones.test(nodeName)) {\n          node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n        } else {\n          node = data.createElem(nodeName);\n        }\n\n        // Avoid adding some elements to fragments in IE < 9 because\n        // * Attributes like `name` or `type` cannot be set/changed once an element\n        //   is inserted into a document/fragment\n        // * Link elements with `src` attributes that are inaccessible, as with\n        //   a 403 response, will cause the tab/window to crash\n        // * Script elements appended to fragments will execute when their `src`\n        //   or `text` property is set\n        return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n      }\n\n      /**\n       * returns a shived DocumentFragment for the given document\n       * @memberOf html5\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived DocumentFragment.\n       */\n      function createDocumentFragment(ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createDocumentFragment();\n        }\n        data = data || getExpandoData(ownerDocument);\n        var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n        for(;i<l;i++){\n          clone.createElement(elems[i]);\n        }\n        return clone;\n      }\n\n      /**\n       * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n       * @private\n       * @param {Document|DocumentFragment} ownerDocument The document.\n       * @param {Object} data of the document.\n       */\n      function shivMethods(ownerDocument, data) {\n        if (!data.cache) {\n          data.cache = {};\n          data.createElem = ownerDocument.createElement;\n          data.createFrag = ownerDocument.createDocumentFragment;\n          data.frag = data.createFrag();\n        }\n\n\n        ownerDocument.createElement = function(nodeName) {\n          //abort shiv\n          if (!html5.shivMethods) {\n            return data.createElem(nodeName);\n          }\n          return createElement(nodeName, ownerDocument, data);\n        };\n\n        ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n                                                        'var n=f.cloneNode(),c=n.createElement;' +\n                                                        'h.shivMethods&&(' +\n                                                        // unroll the `createElement` calls\n                                                        getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\n          data.createElem(nodeName);\n          data.frag.createElement(nodeName);\n          return 'c(\"' + nodeName + '\")';\n        }) +\n          ');return n}'\n                                                       )(html5, data.frag);\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivDocument(ownerDocument) {\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        var data = getExpandoData(ownerDocument);\n\n        if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n          data.hasCSS = !!addStyleSheet(ownerDocument,\n                                        // corrects block display not defined in IE6/7/8/9\n                                        'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n                                        // adds styling not present in IE6/7/8/9\n                                        'mark{background:#FF0;color:#000}' +\n                                        // hides non-rendered elements\n                                        'template{display:none}'\n                                       );\n        }\n        if (!supportsUnknownElements) {\n          shivMethods(ownerDocument, data);\n        }\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * The `html5` object is exposed so that more elements can be shived and\n       * existing shiving can be detected on iframes.\n       * @type Object\n       * @example\n       *\n       * // options can be changed before the script is included\n       * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n       */\n      var html5 = {\n\n        /**\n         * An array or space separated string of node names of the elements to shiv.\n         * @memberOf html5\n         * @type Array|String\n         */\n        'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\n\n        /**\n         * current version of html5shiv\n         */\n        'version': version,\n\n        /**\n         * A flag to indicate that the HTML5 style sheet should be inserted.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivCSS': (options.shivCSS !== false),\n\n        /**\n         * Is equal to true if a browser supports creating unknown/HTML5 elements\n         * @memberOf html5\n         * @type boolean\n         */\n        'supportsUnknownElements': supportsUnknownElements,\n\n        /**\n         * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n         * methods should be overwritten.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivMethods': (options.shivMethods !== false),\n\n        /**\n         * A string to describe the type of `html5` object (\"default\" or \"default print\").\n         * @memberOf html5\n         * @type String\n         */\n        'type': 'default',\n\n        // shivs the document according to the specified `html5` object options\n        'shivDocument': shivDocument,\n\n        //creates a shived element\n        createElement: createElement,\n\n        //creates a shived documentFragment\n        createDocumentFragment: createDocumentFragment,\n\n        //extends list of elements\n        addElements: addElements\n      };\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose html5\n      window.html5 = html5;\n\n      // shiv the document\n      shivDocument(document);\n\n      /*------------------------------- Print Shiv -------------------------------*/\n\n      /** Used to filter media types */\n      var reMedia = /^$|\\b(?:all|print)\\b/;\n\n      /** Used to namespace printable elements */\n      var shivNamespace = 'html5shiv';\n\n      /** Detect whether the browser supports shivable style sheets */\n      var supportsShivableSheets = !supportsUnknownElements && (function() {\n        // assign a false negative if unable to shiv\n        var docEl = document.documentElement;\n        return !(\n          typeof document.namespaces == 'undefined' ||\n            typeof document.parentWindow == 'undefined' ||\n            typeof docEl.applyElement == 'undefined' ||\n            typeof docEl.removeNode == 'undefined' ||\n            typeof window.attachEvent == 'undefined'\n        );\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Wraps all HTML5 elements in the given document with printable elements.\n       * (eg. the \"header\" element is wrapped with the \"html5shiv:header\" element)\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Array} An array wrappers added.\n       */\n      function addWrappers(ownerDocument) {\n        var node,\n        nodes = ownerDocument.getElementsByTagName('*'),\n          index = nodes.length,\n          reElements = RegExp('^(?:' + getElements().join('|') + ')$', 'i'),\n          result = [];\n\n        while (index--) {\n          node = nodes[index];\n          if (reElements.test(node.nodeName)) {\n            result.push(node.applyElement(createWrapper(node)));\n          }\n        }\n        return result;\n      }\n\n      /**\n       * Creates a printable wrapper for the given element.\n       * @private\n       * @param {Element} element The element.\n       * @returns {Element} The wrapper.\n       */\n      function createWrapper(element) {\n        var node,\n        nodes = element.attributes,\n          index = nodes.length,\n          wrapper = element.ownerDocument.createElement(shivNamespace + ':' + element.nodeName);\n\n        // copy element attributes to the wrapper\n        while (index--) {\n          node = nodes[index];\n          node.specified && wrapper.setAttribute(node.nodeName, node.nodeValue);\n        }\n        // copy element styles to the wrapper\n        wrapper.style.cssText = element.style.cssText;\n        return wrapper;\n      }\n\n      /**\n       * Shivs the given CSS text.\n       * (eg. header{} becomes html5shiv\\:header{})\n       * @private\n       * @param {String} cssText The CSS text to shiv.\n       * @returns {String} The shived CSS text.\n       */\n      function shivCssText(cssText) {\n        var pair,\n        parts = cssText.split('{'),\n          index = parts.length,\n          reElements = RegExp('(^|[\\\\s,>+~])(' + getElements().join('|') + ')(?=[[\\\\s,>+~#.:]|$)', 'gi'),\n          replacement = '$1' + shivNamespace + '\\\\:$2';\n\n        while (index--) {\n          pair = parts[index] = parts[index].split('}');\n          pair[pair.length - 1] = pair[pair.length - 1].replace(reElements, replacement);\n          parts[index] = pair.join('}');\n        }\n        return parts.join('{');\n      }\n\n      /**\n       * Removes the given wrappers, leaving the original elements.\n       * @private\n       * @params {Array} wrappers An array of printable wrappers.\n       */\n      function removeWrappers(wrappers) {\n        var index = wrappers.length;\n        while (index--) {\n          wrappers[index].removeNode();\n        }\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document for print.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivPrint(ownerDocument) {\n        var shivedSheet,\n        wrappers,\n        data = getExpandoData(ownerDocument),\n          namespaces = ownerDocument.namespaces,\n          ownerWindow = ownerDocument.parentWindow;\n\n        if (!supportsShivableSheets || ownerDocument.printShived) {\n          return ownerDocument;\n        }\n        if (typeof namespaces[shivNamespace] == 'undefined') {\n          namespaces.add(shivNamespace);\n        }\n\n        function removeSheet() {\n          clearTimeout(data._removeSheetTimer);\n          if (shivedSheet) {\n            shivedSheet.removeNode(true);\n          }\n          shivedSheet= null;\n        }\n\n        ownerWindow.attachEvent('onbeforeprint', function() {\n\n          removeSheet();\n\n          var imports,\n          length,\n          sheet,\n          collection = ownerDocument.styleSheets,\n            cssText = [],\n            index = collection.length,\n            sheets = Array(index);\n\n          // convert styleSheets collection to an array\n          while (index--) {\n            sheets[index] = collection[index];\n          }\n          // concat all style sheet CSS text\n          while ((sheet = sheets.pop())) {\n            // IE does not enforce a same origin policy for external style sheets...\n            // but has trouble with some dynamically created stylesheets\n            if (!sheet.disabled && reMedia.test(sheet.media)) {\n\n              try {\n                imports = sheet.imports;\n                length = imports.length;\n              } catch(er){\n                length = 0;\n              }\n\n              for (index = 0; index < length; index++) {\n                sheets.push(imports[index]);\n              }\n\n              try {\n                cssText.push(sheet.cssText);\n              } catch(er){}\n            }\n          }\n\n          // wrap all HTML5 elements with printable elements and add the shived style sheet\n          cssText = shivCssText(cssText.reverse().join(''));\n          wrappers = addWrappers(ownerDocument);\n          shivedSheet = addStyleSheet(ownerDocument, cssText);\n\n        });\n\n        ownerWindow.attachEvent('onafterprint', function() {\n          // remove wrappers, leaving the original elements, and remove the shived style sheet\n          removeWrappers(wrappers);\n          clearTimeout(data._removeSheetTimer);\n          data._removeSheetTimer = setTimeout(removeSheet, 500);\n        });\n\n        ownerDocument.printShived = true;\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose API\n      html5.type += ' print';\n      html5.shivPrint = shivPrint;\n\n      // shiv for print\n      shivPrint(document);\n\n      if(typeof module == 'object' && module.exports){\n        module.exports = html5;\n      }\n\n    }(typeof window !== \"undefined\" ? window : this, document));\n  }\n\n  ;\n\n\n  /**\n   * contains checks to see if a string contains another string\n   *\n   * @access private\n   * @function contains\n   * @param {string} str - The string we want to check for substrings\n   * @param {string} substr - The substring we want to search the first string for\n   * @returns {boolean}\n   */\n\n  function contains(str, substr) {\n    return !!~('' + str).indexOf(substr);\n  }\n\n  ;\n\n  /**\n   * createElement is a convenience wrapper around document.createElement. Since we\n   * use createElement all over the place, this allows for (slightly) smaller code\n   * as well as abstracting away issues with creating elements in contexts other than\n   * HTML documents (e.g. SVG documents).\n   *\n   * @access private\n   * @function createElement\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\n   */\n\n  function createElement() {\n    if (typeof document.createElement !== 'function') {\n      // This is the case in IE7, where the type of createElement is \"object\".\n      // For this reason, we cannot call apply() as Object is not a Function.\n      return document.createElement(arguments[0]);\n    } else if (isSVG) {\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\n    } else {\n      return document.createElement.apply(document, arguments);\n    }\n  }\n\n  ;\n\n  /**\n   * Create our \"modernizr\" element that we do most feature tests on.\n   *\n   * @access private\n   */\n\n  var modElem = {\n    elem: createElement('modernizr')\n  };\n\n  // Clean up this element\n  Modernizr._q.push(function() {\n    delete modElem.elem;\n  });\n\n  \n\n  var mStyle = {\n    style: modElem.elem.style\n  };\n\n  // kill ref for gc, must happen before mod.elem is removed, so we unshift on to\n  // the front of the queue.\n  Modernizr._q.unshift(function() {\n    delete mStyle.style;\n  });\n\n  \n\n  /**\n   * getBody returns the body of a document, or an element that can stand in for\n   * the body if a real body does not exist\n   *\n   * @access private\n   * @function getBody\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\n   * artificially created element that stands in for the body\n   */\n\n  function getBody() {\n    // After page load injecting a fake body doesn't work so check if body exists\n    var body = document.body;\n\n    if (!body) {\n      // Can't use the real body create a fake one.\n      body = createElement(isSVG ? 'svg' : 'body');\n      body.fake = true;\n    }\n\n    return body;\n  }\n\n  ;\n\n  /**\n   * injectElementWithStyles injects an element with style element and some CSS rules\n   *\n   * @access private\n   * @function injectElementWithStyles\n   * @param {string} rule - String representing a css rule\n   * @param {function} callback - A function that is used to test the injected element\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\n   * @returns {boolean}\n   */\n\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\n    var mod = 'modernizr';\n    var style;\n    var ret;\n    var node;\n    var docOverflow;\n    var div = createElement('div');\n    var body = getBody();\n\n    if (parseInt(nodes, 10)) {\n      // In order not to give false positives we create a node for each test\n      // This also allows the method to scale for unspecified uses\n      while (nodes--) {\n        node = createElement('div');\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n        div.appendChild(node);\n      }\n    }\n\n    style = createElement('style');\n    style.type = 'text/css';\n    style.id = 's' + mod;\n\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n    (!body.fake ? div : body).appendChild(style);\n    body.appendChild(div);\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = rule;\n    } else {\n      style.appendChild(document.createTextNode(rule));\n    }\n    div.id = mod;\n\n    if (body.fake) {\n      //avoid crashing IE8, if background image is used\n      body.style.background = '';\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n      body.style.overflow = 'hidden';\n      docOverflow = docElement.style.overflow;\n      docElement.style.overflow = 'hidden';\n      docElement.appendChild(body);\n    }\n\n    ret = callback(div, rule);\n    // If this is done after page load we don't want to remove the body so check if body exists\n    if (body.fake) {\n      body.parentNode.removeChild(body);\n      docElement.style.overflow = docOverflow;\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n      docElement.offsetHeight;\n    } else {\n      div.parentNode.removeChild(div);\n    }\n\n    return !!ret;\n\n  }\n\n  ;\n\n  /**\n   * domToCSS takes a camelCase string and converts it to kebab-case\n   * e.g. boxSizing -> box-sizing\n   *\n   * @access private\n   * @function domToCSS\n   * @param {string} name - String name of camelCase prop we want to convert\n   * @returns {string} The kebab-case version of the supplied name\n   */\n\n  function domToCSS(name) {\n    return name.replace(/([A-Z])/g, function(str, m1) {\n      return '-' + m1.toLowerCase();\n    }).replace(/^ms-/, '-ms-');\n  }\n  ;\n\n  /**\n   * nativeTestProps allows for us to use native feature detection functionality if available.\n   * some prefixed form, or false, in the case of an unsupported rule\n   *\n   * @access private\n   * @function nativeTestProps\n   * @param {array} props - An array of property names\n   * @param {string} value - A string representing the value we want to check via @supports\n   * @returns {boolean|undefined} A boolean when @supports exists, undefined otherwise\n   */\n\n  // Accepts a list of property names and a single value\n  // Returns `undefined` if native detection not available\n  function nativeTestProps(props, value) {\n    var i = props.length;\n    // Start with the JS API: http://www.w3.org/TR/css3-conditional/#the-css-interface\n    if ('CSS' in window && 'supports' in window.CSS) {\n      // Try every prefixed variant of the property\n      while (i--) {\n        if (window.CSS.supports(domToCSS(props[i]), value)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    // Otherwise fall back to at-rule (for Opera 12.x)\n    else if ('CSSSupportsRule' in window) {\n      // Build a condition string for every prefixed variant\n      var conditionText = [];\n      while (i--) {\n        conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n      }\n      conditionText = conditionText.join(' or ');\n      return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function(node) {\n        return getComputedStyle(node, null).position == 'absolute';\n      });\n    }\n    return undefined;\n  }\n  ;\n\n  /**\n   * cssToDOM takes a kebab-case string and converts it to camelCase\n   * e.g. box-sizing -> boxSizing\n   *\n   * @access private\n   * @function cssToDOM\n   * @param {string} name - String name of kebab-case prop we want to convert\n   * @returns {string} The camelCase version of the supplied name\n   */\n\n  function cssToDOM(name) {\n    return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\n      return m1 + m2.toUpperCase();\n    }).replace(/^-/, '');\n  }\n  ;\n\n  // testProps is a generic CSS / DOM property test.\n\n  // In testing support for a given CSS property, it's legit to test:\n  //    `elem.style[styleName] !== undefined`\n  // If the property is supported it will return an empty string,\n  // if unsupported it will return undefined.\n\n  // We'll take advantage of this quick test and skip setting a style\n  // on our modernizr element, but instead just testing undefined vs\n  // empty string.\n\n  // Property names can be provided in either camelCase or kebab-case.\n\n  function testProps(props, prefixed, value, skipValueTest) {\n    skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\n    // Try native detect first\n    if (!is(value, 'undefined')) {\n      var result = nativeTestProps(props, value);\n      if (!is(result, 'undefined')) {\n        return result;\n      }\n    }\n\n    // Otherwise do it properly\n    var afterInit, i, propsLength, prop, before;\n\n    // If we don't have a style element, that means we're running async or after\n    // the core tests, so we'll need to create our own elements to use\n\n    // inside of an SVG element, in certain browsers, the `style` element is only\n    // defined for valid tags. Therefore, if `modernizr` does not have one, we\n    // fall back to a less used element and hope for the best.\n    var elems = ['modernizr', 'tspan'];\n    while (!mStyle.style) {\n      afterInit = true;\n      mStyle.modElem = createElement(elems.shift());\n      mStyle.style = mStyle.modElem.style;\n    }\n\n    // Delete the objects if we created them.\n    function cleanElems() {\n      if (afterInit) {\n        delete mStyle.style;\n        delete mStyle.modElem;\n      }\n    }\n\n    propsLength = props.length;\n    for (i = 0; i < propsLength; i++) {\n      prop = props[i];\n      before = mStyle.style[prop];\n\n      if (contains(prop, '-')) {\n        prop = cssToDOM(prop);\n      }\n\n      if (mStyle.style[prop] !== undefined) {\n\n        // If value to test has been passed in, do a set-and-check test.\n        // 0 (integer) is a valid property value, so check that `value` isn't\n        // undefined, rather than just checking it's truthy.\n        if (!skipValueTest && !is(value, 'undefined')) {\n\n          // Needs a try catch block because of old IE. This is slow, but will\n          // be avoided in most cases because `skipValueTest` will be used.\n          try {\n            mStyle.style[prop] = value;\n          } catch (e) {}\n\n          // If the property value has changed, we assume the value used is\n          // supported. If `value` is empty string, it'll fail here (because\n          // it hasn't changed), which matches how browsers have implemented\n          // CSS.supports()\n          if (mStyle.style[prop] != before) {\n            cleanElems();\n            return prefixed == 'pfx' ? prop : true;\n          }\n        }\n        // Otherwise just return true, or the property name if this is a\n        // `prefixed()` call\n        else {\n          cleanElems();\n          return prefixed == 'pfx' ? prop : true;\n        }\n      }\n    }\n    cleanElems();\n    return false;\n  }\n\n  ;\n\n  /**\n   * testProp() investigates whether a given style property is recognized\n   * Property names can be provided in either camelCase or kebab-case.\n   *\n   * @memberof Modernizr\n   * @name Modernizr.testProp\n   * @access public\n   * @optionName Modernizr.testProp()\n   * @optionProp testProp\n   * @function testProp\n   * @param {string} prop - Name of the CSS property to check\n   * @param {string} [value] - Name of the CSS value to check\n   * @param {boolean} [useValue] - Whether or not to check the value if @supports isn't supported\n   * @returns {boolean}\n   * @example\n   *\n   * Just like [testAllProps](#modernizr-testallprops), only it does not check any vendor prefixed\n   * version of the string.\n   *\n   * Note that the property name must be provided in camelCase (e.g. boxSizing not box-sizing)\n   *\n   * ```js\n   * Modernizr.testProp('pointerEvents')  // true\n   * ```\n   *\n   * You can also provide a value as an optional second argument to check if a\n   * specific value is supported\n   *\n   * ```js\n   * Modernizr.testProp('pointerEvents', 'none') // true\n   * Modernizr.testProp('pointerEvents', 'penguin') // false\n   * ```\n   */\n\n  var testProp = ModernizrProto.testProp = function(prop, value, useValue) {\n    return testProps([prop], undefined, value, useValue);\n  };\n  \n\n  /**\n   * fnBind is a super small [bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind) polyfill.\n   *\n   * @access private\n   * @function fnBind\n   * @param {function} fn - a function you want to change `this` reference to\n   * @param {object} that - the `this` you want to call the function with\n   * @returns {function} The wrapped version of the supplied function\n   */\n\n  function fnBind(fn, that) {\n    return function() {\n      return fn.apply(that, arguments);\n    };\n  }\n\n  ;\n/*!\n{\n  \"name\": \"SVG\",\n  \"property\": \"svg\",\n  \"caniuse\": \"svg\",\n  \"tags\": [\"svg\"],\n  \"authors\": [\"Erik Dahlstrom\"],\n  \"polyfills\": [\n    \"svgweb\",\n    \"raphael\",\n    \"amplesdk\",\n    \"canvg\",\n    \"svg-boilerplate\",\n    \"sie\",\n    \"dojogfx\",\n    \"fabricjs\"\n  ]\n}\n!*/\n/* DOC\nDetects support for SVG in `<embed>` or `<object>` elements.\n*/\n\n  Modernizr.addTest('svg', !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n\n\n  // Run each test\n  testRunner();\n\n  // Remove the \"no-js\" class if it exists\n  setClasses(classes);\n\n  delete ModernizrProto.addTest;\n  delete ModernizrProto.addAsyncTest;\n\n  // Run the things that are supposed to run after the tests\n  for (var i = 0; i < Modernizr._q.length; i++) {\n    Modernizr._q[i]();\n  }\n\n  // Leak Modernizr namespace\n  window.Modernizr = Modernizr;\n\n\n;\n\n})(window, document);","(function ($) {\n\n  /**\n   * The recommended way for producing HTML markup through JavaScript is to write\n   * theming functions. These are similiar to the theming functions that you might\n   * know from 'phptemplate' (the default PHP templating engine used by most\n   * Drupal themes including Omega). JavaScript theme functions accept arguments\n   * and can be overriden by sub-themes.\n   *\n   * In most cases, there is no good reason to NOT wrap your markup producing\n   * JavaScript in a theme function.\n   */\n  Drupal.theme.prototype.pulBaseExampleButton = function (path, title) {\n    // Create an anchor element with jQuery.\n    return $('<a href=\"' + path + '\" title=\"' + title + '\">' + title + '</a>');\n  };\n\n\n  Drupal.theme.prototype.pulChatStatusBlock = function () {\n    var chat_js_warning = '<span class=\"needs-js\"></span>';\n    var chat_online = '<span class=\"libraryh3lp\" jid=\"libchatpul-main@chat.libraryh3lp.com\" style=\"display: none;\"><a class=\" button--libraryh3lp button--libraryh3lp__online\" href=\"http://library.princeton.edu/help/chat\"> Online now</a></span>';\n    var chat_offline = '<span class=\"libraryh3lp\" style=\"display: none;\"><a class=\" button--libraryh3lp button--libraryh3lp__offline\" href=\"http://library.princeton.edu/help/e-mail\"> Offline now</a></span>';\n    return chat_js_warning + chat_online + chat_offline;\n  };\n\n  /**\n   * Behaviors are Drupal's way of applying JavaScript to a page. In short, the\n   * advantage of Behaviors over a simple 'document.ready()' lies in how it\n   * interacts with content loaded through Ajax. Opposed to the\n   * 'document.ready()' event which is only fired once when the page is\n   * initially loaded, behaviors get re-executed whenever something is added to\n   * the page through Ajax.\n   *\n   * You can attach as many behaviors as you wish. In fact, instead of overloading\n   * a single behavior with multiple, completely unrelated tasks you should create\n   * a separate behavior for every separate task.\n   *\n   * In most cases, there is no good reason to NOT wrap your JavaScript code in a\n   * behavior.\n   *\n   * @param context\n   *   The context for which the behavior is being executed. This is either the\n   *   full page or a piece of HTML that was just added through Ajax.\n   * @param settings\n   *   An array of settings (added through drupal_add_js()). Instead of accessing\n   *   Drupal.settings directly you should use this because of potential\n   *   modifications made by the Ajax callback that also produced 'context'.\n   */\n  //Drupal.behaviors.pulBaseExampleBehavior = {\n    //attach: function (context, settings) {\n      // By using the 'context' variable we make sure that our code only runs on\n      // the relevant HTML. Furthermore, by using jQuery.once() we make sure that\n      // we don't run the same piece of code for an HTML snippet that we already\n      // processed previously. By using .once('foo') all processed elements will\n      // get tagged with a 'foo-processed' class, causing all future invocations\n      // of this behavior to ignore them.\n      // $('.social-media', context).once('pul', function () {\n      //   // Now, we are invoking the previously declared theme function using two\n      //   // settings as arguments.\n      //   console.log(settings);\n      //   var $anchor = Drupal.theme('pulBaseExampleButton', settings.pul_base_theme.myExampleLinkPath, settings.pul_base_theme.myExampleLinkTitle);\n\n      //   // The anchor is then appended to the current element.\n      //   $anchor.appendTo(this);\n      // });\n    //}\n  //};\n\n  Drupal.behaviors.pulSmoothScroll = {\n    attach: function (context) {\n    // browser window scroll (in pixels) after which the \"back to top\" link is shown\n    var offset = 300,\n      //browser window scroll (in pixels) after which the \"back to top\" link opacity is reduced\n      offset_opacity = 1200,\n      //duration of the top scrolling animation (in ms)\n      scroll_top_duration = 700,\n      //grab the \"back to top\" link\n      $back_to_top = $('.cd-top');\n\n      //hide or show the \"back to top\" link\n      $(window).scroll(function(){\n        ( $(this).scrollTop() > offset ) ? $back_to_top.addClass('cd-is-visible') : $back_to_top.removeClass('cd-is-visible cd-fade-out');\n        if( $(this).scrollTop() > offset_opacity ) { \n          $back_to_top.addClass('cd-fade-out');\n        }\n      });\n\n      //smooth scroll\n      $('a[href*=#l-page]').click(function() {\n        if (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') && location.hostname == this.hostname) {\n          var target = $(this.hash);\n          target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\n          if (target.length) {\n            $('html,body').animate({\n              scrollTop: target.offset().top\n            }, 1000);\n            return false;\n          }\n        }\n      });\n    }\n  };\n\n  Drupal.behaviors.pulSearchHeadersLinkBehavior = {\n    attach: function (context) {\n      var href_staff = $('.page-find-all-results #general_site_user_search-panel_pane_1 .more-link a').attr('href');\n      var href_website = $('.page-find-all-results #general_site_keyword_search-panel_pane_1 .more-link a').attr('href');\n      var href_databases = $('.page-find-all-results #databases_keyword_search-panel_pane_2 .more-link a').attr('href');\n      //staff search\n      var l_staff = $('#general_site_user_search-panel_pane_1 .item-list li').length;\n      if (l_staff > 2) {\n        $('.page-find-all-results #general_site_user_search-panel_pane_1 h2').replaceWith(function() {\n            return '<h2><a href=\"' + href_staff + '\" title=\"See all library staff results.\"><i class=\"icon-staff\"></i>Library Staff Results</a></h2>';\n        });\n      } else {\n      }\n      //site search\n      var l_site = $('#general_site_keyword_search-panel_pane_1 .item-list li').length;\n      if(l_site > 2) {\n        $('.page-find-all-results #general_site_keyword_search-panel_pane_1 h2').replaceWith(function() {\n            return '<h2><a href=\"' + href_website + '\" title=\"See all library website results.\"><i class=\"icon-windows\"></i>Library Website Results</a></h2>';\n        });\n      } else {\n      }\n      // databases search\n      var l_db = $('#databases_keyword_search-panel_pane_2 .item-list li').length;\n      if(l_db > 2) {\n        $('.page-find-all-results #databases_keyword_search-panel_pane_2 h2').replaceWith(function() {\n          return '<h2><a href=\"' + href_databases + '\" title=\"See all database results.\"><i class=\"icon-databases\"></i>Databases Results</a></h2>';\n      });\n      } else {\n      }\n\n    }\n  };\n\n  Drupal.behaviors.pulMainMenuBehavior = {\n    attach: function (context) {\n      // By using the 'context' variable we make sure that our code only runs on\n      // the relevant HTML. Furthermore, by using jQuery.once() we make sure that\n      // we don't run the same piece of code for an HTML snippet that we already\n      // processed previously. By using .once('foo') all processed elements will\n      // get tagged with a 'foo-processed' class, causing all future invocations\n      // of This behavior to ignore them.\n      //console.log(context);\n      //console.log(settings);\n      $('.centered-navigation-menu', context).once('pul', function () {\n        var menu = $('.centered-navigation-menu');\n        var menuToggle = $('.centered-navigation-menu-button');\n        $(menuToggle).click(function (e) {\n          e.preventDefault();\n          menu.slideToggle(function () {\n            if (menu.is(':hidden')) {\n              menu.removeAttr('style');\n            }\n          });\n        });\n\n        // track main menu usage with Google Analytics\n        \n        $('.centered-navigation-menu ul.menu a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', 'Main Menu', 'click', $(this).text(),\n              {'page': window.location.pathname });\n          });\n        });\n      });\n\n      // });\n      // Example Usage\n      // $('#block-system-main-menu', context).once('pul', function () {\n      //   // Now, we are invoking the previously declared theme function using two\n      //   // settings as arguments.\n      //   console.log(settings);\n      //   var $anchor = Drupal.theme('pulBaseExampleButton', 'cats', 'cats');\n\n      //   // The anchor is then appended to the current element.\n      //   $anchor.appendTo(this);\n      // });\n\n    }\n  };\n\n\n  Drupal.behaviors.pulResourceButtonBehavior = {\n    attach: function (context, settings) {\n      $('.field--name-field-db-access-url', context).once('pul', function () {\n        $('.field--name-field-db-access-url a, .field--name-field-db-access-url a').each(function () {\n          var viewOnlineLink = $(this).attr('href');\n          var undecodeViewOnline = viewOnlineLink.replace(/\\&amp%3B|&amp;/g, '&');\n          //console.log(undecodeViewOnline);\n          var resolvePrefix = settings.pul_base_theme.resolvePrefix;\n          $(this).attr('href', resolvePrefix + undecodeViewOnline);\n          $(this).attr('target', '_blank');\n        });\n      });\n    }\n  };\n\n  Drupal.behaviors.pulChatWidgetBehavior = {\n    attach: function (context) {\n      $('.library-three-help', context).once('pul', function () {\n        var chat_text_block = Drupal.theme('pulChatStatusBlock');\n        $(this).append(chat_text_block);\n      });\n    }\n  };\n    \n  Drupal.behaviors.pulTrackFooterMenuUsage = {\n    attach: function (context) {\n      $('.l-region--footer', context).once('pul', function () {\n        $('.l-region--footer .block--menu a').each(function () {\n          $(this).addClass('footer-link');\n          $(this).click(function () {\n            ga('send', 'event', 'Footer Menu', 'click', $(this).text(), \n              {'page': window.location.pathname});\n          });\n        });\n      });\n    }\n  };\n\n  Drupal.behaviors.pulTrackGetHelpMenuUsage = {\n    attach: function (context) {\n      $('.pane-menu-menu-get-help-menu', context).once('pul', function () {\n        $('.pane-menu-menu-get-help-menu a').each(function () {\n          $(this).addClass('get-help-link');\n          $(this).click(function () {\n            ga('send', 'event', 'Get Help Menu', 'click', $(this).text());\n          });\n        });\n      });\n    }\n  };\n\n  Drupal.behaviors.pulTrackNewsUsage = {\n    attach: function (context) {\n      $('.view-library-news', context).once('pul', function () {\n        $('.view-library-news a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).addClass('library-news-link');\n          $(this).click(function () {\n            ga('send', 'event', 'Library News', 'click', $(this).text() + ' Position ' + result_position);\n          });\n        });\n      });\n    }\n  };\n\n\n  Drupal.behaviors.pulRewriteTempStaff = {\n    attach: function (context) {\n      $('.view-staff-department-list', context).once('pul', function () {\n        $('tbody a').each(function (index, value) {\n          var link = $(this).attr('href');\n          var update = link.replace(/temp_/, '');\n          $(this).attr('href', update);\n        });\n        $('tbody td.views-field-mail').each(function (index, value) {\n          var email = $(this).text();\n          var update = email.replace(/(temp_|_test)/, '');\n          $(this).text(update);\n        });\n      });\n    }\n  };\n\n  Drupal.behaviors.pulTrackHoursUsage = {\n    attach: function (context) {\n      $('.pane-library-hours', context).once('pul', function () {\n        $('.pane-library-hours a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).addClass('library-hours-link');\n          $(this).click(function () {\n            ga('send', 'event', 'Library Daily Hours', 'click', $(this).text() + ' Position ' + result_position);\n          });\n        });\n      });\n    }\n  };\n\n  Drupal.behaviors.pulTrackTabLinkUsage = {\n    attach: function (context) {\n      // all search tab\n      $('#quicktabs-tabpage-homepage_search_tabs-0 .homepage-tab-form-message', context).once('pul', function () {\n        $('#quicktabs-tabpage-homepage_search_tabs-0 .homepage-tab-form-message a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', $(this).text(), 'All Tab');\n          });\n        });\n      });\n      // books+ tab\n      $('#quicktabs-tabpage-homepage_search_tabs-1 .homepage-tab-form-message', context).once('pul', function () {\n        $('#quicktabs-tabpage-homepage_search_tabs-1 .homepage-tab-form-message a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', $(this).text(), 'Books+ Tab');\n          });\n        });\n      });\n      // articles+ tab\n      $('#quicktabs-tabpage-homepage_search_tabs-2 .homepage-tab-form-message', context).once('pul', function () {\n        $('#quicktabs-tabpage-homepage_search_tabs-2 .homepage-tab-form-message a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', $(this).text(), 'Articles+ Tab');\n          });\n        });\n      });\n      // databases tab\n      $('#quicktabs-tabpage-homepage_search_tabs-3 .homepage-tab-form-message', context).once('pul', function () {\n        $('#quicktabs-tabpage-homepage_search_tabs-3 .homepage-tab-form-message a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', $(this).text(), 'Databases Tab');\n          });\n        });\n      });\n    }\n  };\n  \n  Drupal.behaviors.pulTrackAllSearchUsage = {\n    attach: function (context) {\n\n      $('.page-find-all-results .l-main').once('pul', function () {\n\n        $('.view-databases-keyword-search .item-list .database-title').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n            ga('send', 'event', 'All Search', 'Database Title', 'Position ' + result_position);\n          });\n        });\n\n        // for subjects block\n        $(' .view-database-subject-search .item-list a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n            ga('send', 'event', 'All Search', 'Database Subject', 'Position ' + result_position);\n          });\n        });\n\n        //general keyword search view\n        $(' .view-general-site-keyword-search .item-list .database-titles a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n            ga('send', 'event', 'All Search', 'Website Search', 'Position ' + result_position);\n          });\n        });\n\n        //people search\n        $(' .view-general-site-user-search .item-list .user-link').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'All Search', 'People Search', 'Position ' + result_position);\n            });\n        });\n\n          // Add tracking codes to expand links on all search\n          // refine-link = top class more-link - bottom\n        $(' .view-databases-keyword-search .refine-link a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'Expand All Search', 'Database', 'Top');\n            });\n        });\n\n        // website search\n        $(' .view-general-site-keyword-search .refine-link a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'Expand All Search', 'Website Search', 'Top');\n            });\n        });\n\n        $(' .view-databases-keyword-search .more-link a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'Expand All Search', 'Database', 'Bottom');\n            });\n        });\n\n        $(' .view-databases-subject-search .more-link a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'Expand All Search', 'Subject Browse', 'Bottom');\n            });\n        });\n\n        $(' .view-general-site-user-search .more-link a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'Expand All Search', 'People Search', 'Bottom');\n            });\n        });\n\n        $(' .view-general-site-keyword-search .more-link a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'Expand All Search', 'Website Search', 'Bottom');\n            });\n        });\n        // libraries and collections\n        $(' .view-search-libraries-and-collections h3 a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'Expand All Search', 'Libraries and Collections', 'Title');\n            });\n        });\n        \n        $(' .view-search-libraries-and-collections .views-field-field-library-homepage-url a').each(function (index, value) {\n          var result_position = parseInt(index, 10) + 1;\n          $(this).click(function () {\n              ga('send', 'event', 'Expand All Search', 'Libraries and Collections', 'Homepage URL');\n            });\n        });\n\n      });\n    }\n  };\n\n  Drupal.behaviors.pulTrackBranchUsage = {\n    attach: function (context) {\n      $('.branch-libraries', context).once('pul', function () {\n\n        // branch main menus\n        $('.branch-libraries #menu--secondary ul.menu a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', 'Branch Menu', 'click', $(this).text(),\n              {'page': window.location.pathname });\n          });\n        });\n\n        // branch quick links\n        $('.branch-libraries .pane-node-field-branch-quick-link a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', 'Branch Quick Links', 'click', $(this).text(),\n              {'page': window.location.pathname });\n          });\n        });\n\n        // stokes links to main catalog, databases, newspapers, on landing page\n        $('.branch-libraries.libraries-stokes a.button--external-link').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', 'Branch Quick Links', 'click', $(this).text(),\n              {'page': window.location.pathname });\n          });\n        });\n\n        // branch external links\n        $('.branch-libraries .pane-node-field-branch-external-links a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', 'Branch External Links', 'click', $(this).text(),\n              {'page': window.location.pathname });\n          });\n        });\n\n        // mendel external links\n        $('.branch-libraries .pane-branch-features-panel-pane-1 a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', 'Branch External Links', 'click', $(this).text(),\n              {'page': window.location.pathname });\n          });\n        });\n\n        // branch featured resources\n        $('.branch-libraries .pane-node-field-branch-featured-resources a').each(function () {\n          $(this).click(function () {\n            ga('send', 'event', 'Branch Featured Resources', 'click', $(this).text(),\n              {'page': window.location.pathname });\n          });\n        });\n\n      });\n    }\n  };\n\n})(jQuery);\n"]}